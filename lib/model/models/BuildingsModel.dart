class BuildingAutogeneratedModel {
  List<BuildingsModel>? buildings;
  List<PrioritiesModel>? priorities;
 /* List<FinanceCodes>? financeCodes;
  List<CostCenters>? costCenters;
  List<CostCodes>? costCodes;
  List<Shifts>? shifts;
  List<Frequencies>? frequencies;*/

  BuildingAutogeneratedModel(
      {this.buildings,
        this.priorities,
       /* this.financeCodes,
        this.costCenters,
        this.costCodes,
        this.shifts,
        this.frequencies*/
      });

  BuildingAutogeneratedModel.fromJson(Map<String, dynamic> json) {
    if (json['buildings'] != null) {
      buildings = <BuildingsModel>[];
      json['buildings'].forEach((v) {
        buildings!.add(new BuildingsModel.fromJson(v));
      });
    }
    if (json['priorities'] != null) {
      priorities = <PrioritiesModel>[];
      json['priorities'].forEach((v) {
        priorities!.add(new PrioritiesModel.fromJson(v));
      });
    }
   /* if (json['financeCodes'] != null) {
      financeCodes = <FinanceCodes>[];
      json['financeCodes'].forEach((v) {
        financeCodes!.add(new FinanceCodes.fromJson(v));
      });
    }
    if (json['costCenters'] != null) {
      costCenters = <CostCenters>[];
      json['costCenters'].forEach((v) {
        costCenters!.add(new CostCenters.fromJson(v));
      });
    }
    if (json['costCodes'] != null) {
      costCodes = <CostCodes>[];
      json['costCodes'].forEach((v) {
        costCodes!.add(new CostCodes.fromJson(v));
      });
    }
    if (json['shifts'] != null) {
      shifts = <Shifts>[];
      json['shifts'].forEach((v) {
        shifts!.add(new Shifts.fromJson(v));
      });
    }
    if (json['frequencies'] != null) {
      frequencies = <Frequencies>[];
      json['frequencies'].forEach((v) {
        frequencies!.add(new Frequencies.fromJson(v));
      });
    }*/
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.buildings != null) {
      data['buildings'] = this.buildings!.map((v) => v.toJson()).toList();
    }
    if (this.priorities != null) {
      data['priorities'] = this.priorities!.map((v) => v.toJson()).toList();
    }
    /*if (this.financeCodes != null) {
      data['financeCodes'] = this.financeCodes!.map((v) => v.toJson()).toList();
    }
    if (this.costCenters != null) {
      data['costCenters'] = this.costCenters!.map((v) => v.toJson()).toList();
    }
    if (this.costCodes != null) {
      data['costCodes'] = this.costCodes!.map((v) => v.toJson()).toList();
    }
    if (this.shifts != null) {
      data['shifts'] = this.shifts!.map((v) => v.toJson()).toList();
    }
    if (this.frequencies != null) {
      data['frequencies'] = this.frequencies!.map((v) => v.toJson()).toList();
    }*/
    return data;
  }
}

class BuildingsModel {
  int? id;
  String? name;
  Null? code;

  BuildingsModel({this.id, this.name, this.code});

  BuildingsModel.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    code = json['code'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['code'] = this.code;
    return data;
  }
}

class PrioritiesModel {
  String? code;
  int? id;
  String? name;

  PrioritiesModel({this.code, this.id, this.name});

  PrioritiesModel.fromJson(Map<String, dynamic> json) {
    code = json['code'];
    id = json['id'];
    name = json['name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['code'] = this.code;
    data['id'] = this.id;
    data['name'] = this.name;
    return data;
  }
}